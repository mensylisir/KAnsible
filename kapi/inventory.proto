syntax = "proto3";
package kapi;
option go_package = ".;kapi";
service AnsibleServer {
  rpc GenerateYaml (InventoryRequest) returns (InventoryReply) {}
  rpc RunPlaybook (PlayRequests) returns (PlayReply) {}
  rpc StreamRunPlaybook(PlayRequests) returns (stream PlayReply) {}
  rpc CheckConfiguration(ConfigRequest) returns (ConfigReply) {}
  rpc StreamPlaybook(PlaybookRequests) returns (stream PlayReply) {}
}

message ConfigReply {
  string message = 1;
}

message ConfigRequest {
  string clusterName = 1;
  string containerNetwork = 2;
  string networkMode = 3;
  string kubeVersion=4;
  string nfs_provisioner_name = 5;
  string nfs_server = 6;
  string nfs_server_path = 7;
}

message PlayRequests {
  string message = 1;
}

message PlayReply {
  string res = 1;
}

message InventoryRequest {
  repeated Node item = 1;
}

message Node {
    string ip = 1;
    string port = 2;
    string password = 3;
    string name = 4;
    string role = 5;
}

message Config {
    string clusterName = 1;
    string containerNetwork = 2;
    string networkMode = 3;
    string kubeVersion=4;
    string nfs_provisioner_name = 5;
    string nfs_server = 6;
    string nfs_server_path = 7;
}

message PlaybookRequests {
  string action = 1;
  repeated Node item = 2;
  Config config = 3;
  repeated string vars = 4;
}

message InventoryReply {
  string message = 1;
}


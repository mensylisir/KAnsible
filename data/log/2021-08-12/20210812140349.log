

PLAY [测试ansible任务] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [192.168.7.127]
ok: [192.168.7.128]

TASK [Set authorized key taken from file] **************************************
ok: [192.168.7.127]
ok: [192.168.7.128]

PLAY RECAP *********************************************************************
192.168.7.127              : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
192.168.7.128              : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Command execution success
[DEPRECATION WARNING]: The TRANSFORM_INVALID_GROUP_CHARS settings is set to 
allow bad characters in group names by default, this will change, but still be 
user configurable on deprecation. This feature will be removed in version 2.10.
 Deprecation warnings can be disabled by setting deprecation_warnings=False in 
ansible.cfg.
[WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details

PLAY [localhost] ***************************************************************

TASK [Check 2.9.0 <= Ansible version < 2.10.0] *********************************
ok: [localhost] => {
    "changed": false,
[WARNING]: Could not match supplied host pattern, ignoring: bastion
    "msg": "All assertions passed"
}

PLAY [bastion[0]] **************************************************************
skipping: no hosts matched

PLAY [k8s-cluster:etcd] ********************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [node1]

TASK [download : prep_download | Set image info command for containerd and crio] ***
skipping: [node1]

TASK [download : prep_download | Set image info command for containerd and crio on localhost] ***
skipping: [node1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [node1]

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ***
skipping: [node1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [node1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [node1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [node1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [node1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [node1]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [node1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [node1]

TASK [download : download | Download files / images] ***************************
skipping: [node1]

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Set up proxy environment] ***************************
ok: [node1]

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [node1] => (item=node1) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
skipping: [node1]

TASK [kubespray-defaults : set fallback_ips] ***********************************
skipping: [node1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [node1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [node1]

TASK [bootstrap-os : Fetch /etc/os-release] ************************************
ok: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
included: /mnt/d/Workspace/KAnsible/data/kubespray/kubespray/roles/bootstrap-os/tasks/bootstrap-debian.yml for node1

TASK [bootstrap-os : Check if bootstrap is needed] *****************************
ok: [node1]

TASK [bootstrap-os : Check http::proxy in apt configuration files] *************
ok: [node1]

TASK [bootstrap-os : Add http_proxy to /etc/apt/apt.conf if http_proxy is defined] ***
skipping: [node1]

TASK [bootstrap-os : Check https::proxy in apt configuration files] ************
ok: [node1]

TASK [bootstrap-os : Add https_proxy to /etc/apt/apt.conf if https_proxy is defined] ***
skipping: [node1]

TASK [bootstrap-os : Check Network Name Resolution configuration] **************
skipping: [node1]

TASK [bootstrap-os : Change Network Name Resolution configuration] *************
skipping: [node1]

TASK [bootstrap-os : Restart systemd-resolved service] *************************
skipping: [node1]

TASK [bootstrap-os : Install python3] ******************************************
skipping: [node1]

TASK [bootstrap-os : Set the ansible_python_interpreter fact] ******************
ok: [node1]

TASK [bootstrap-os : Install dbus for the hostname module] *********************
ok: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : include_tasks] ********************************************
skipping: [node1]

TASK [bootstrap-os : Create remote_tmp for it is used by another module] *******
ok: [node1]

TASK [bootstrap-os : Gather host facts to get ansible_os_family] ***************
ok: [node1]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux)] ***
ok: [node1]

TASK [bootstrap-os : Assign inventory name to unconfigured hostnames (CoreOS, Flatcar, Suse and ClearLinux only)] ***
skipping: [node1]

TASK [bootstrap-os : Update hostname fact (CoreOS, Flatcar, Suse and ClearLinux only)] ***
skipping: [node1]

TASK [bootstrap-os : Install ceph-commmon package] *****************************
skipping: [node1]

TASK [bootstrap-os : Ensure bash_completion.d folder exists] *******************
ok: [node1]

PLAY [Gather facts] ************************************************************

TASK [Gather minimal facts] ****************************************************
ok: [node1]

TASK [Gather necessary facts] **************************************************
ok: [node1] => (item=ansible_distribution_major_version)
ok: [node1] => (item=ansible_default_ipv4)
ok: [node1] => (item=ansible_all_ipv4_addresses)
ok: [node1] => (item=ansible_memtotal_mb)
ok: [node1] => (item=ansible_swaptotal_mb)

PLAY [k8s-cluster:etcd] ********************************************************

TASK [download : prep_download | Set a few facts] ******************************
skipping: [node1]

TASK [download : prep_download | Set image info command for containerd and crio] ***
skipping: [node1]

TASK [download : prep_download | Set image info command for containerd and crio on localhost] ***
skipping: [node1]

TASK [download : prep_download | On localhost, check if passwordless root is possible] ***
skipping: [node1]

TASK [download : prep_download | On localhost, check if user has access to docker without using sudo] ***
skipping: [node1]

TASK [download : prep_download | Parse the outputs of the previous commands] ***
skipping: [node1]

TASK [download : prep_download | Check that local user is in group or can become root] ***
skipping: [node1]

TASK [download : prep_download | Register docker images info] ******************
skipping: [node1]

TASK [download : prep_download | Create staging directory on remote node] ******
skipping: [node1]

TASK [download : prep_download | Create local cache for files and images on control node] ***
skipping: [node1]

TASK [container-engine/crictl : install crictĺ] ********************************
skipping: [node1]

TASK [download : download | Get kubeadm binary and list of required images] ****
skipping: [node1]

TASK [download : download | Download files / images] ***************************
skipping: [node1] => (item={'key': 'netcheck_server', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/l23network/k8s-netchecker-server', 'tag': 'v1.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'netcheck_agent', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/l23network/k8s-netchecker-agent', 'tag': 'v1.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'etcd', 'value': {'container': True, 'file': False, 'enabled': True, 'version': 'v3.4.13', 'dest': '/tmp/releases/etcd-v3.4.13-linux-amd64.tar.gz', 'repo': 'harbor.dev.rdev.tech/kubesprary/coreos/etcd', 'tag': 'v3.4.13', 'sha256': '', 'url': 'http://192.168.80.48/etcd-v3.4.13-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}}) 
skipping: [node1] => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'version': 'v0.9.0', 'dest': '/tmp/releases/cni-plugins-linux-amd64-v0.9.0.tgz', 'sha256': '58a58d389895ba9f9bbd3ef330f186c0bb7484136d0bfb9b50152eed55d9ec24', 'url': 'http://192.168.80.48/cni-plugins-linux-amd64-v0.9.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'version': 'v1.19.7', 'dest': '/tmp/releases/kubeadm-v1.19.7-amd64', 'sha256': 'c63ef1842533cd7888c7452cab9f320dcf45fc1c173e9d40abb712d45992db24', 'url': 'http://192.168.80.48/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'version': 'v1.19.7', 'dest': '/tmp/releases/kubelet-v1.19.7-amd64', 'sha256': 'd8b296825f6dd7a17287b73cd6604d32210abbba86c88fb68c1b1c5016906c54', 'url': 'http://192.168.80.48/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'version': 'v1.19.7', 'dest': '/tmp/releases/kubectl-v1.19.7-amd64', 'sha256': 'd46eb3bbe2575e5b6bedbc6d3519424b4f2f57929d7da1ef7e11c09068f37297', 'url': 'http://192.168.80.48/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'crictl', 'value': {'file': True, 'enabled': False, 'version': 'v1.19.0', 'dest': '/tmp/releases/crictl-v1.19.0-linux-amd64.tar.gz', 'sha256': '87d8ef70b61f2fe3d8b4a48f6f712fd798c6e293ed3723c1e4bbb5052098f0ae', 'url': 'http://192.168.80.48/crictl-v1.20.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'cilium', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/cilium/cilium', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'cilium_init', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/cilium/cilium-init', 'tag': '2019-04-05', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'cilium_operator', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/cilium/operator', 'tag': 'v1.8.6', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'multus', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/nfvpe/multus', 'tag': 'v3.6', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'flannel', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/coreos/flannel', 'tag': 'v0.13.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'version': 'v3.16.5', 'dest': '/tmp/releases/calicoctl', 'sha256': 'd4175559ad0cf69a1352be3d824ae0a794305d6cd5b17ea0ffc6a153b21d2ae7', 'url': 'http://192.168.80.48/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/calico/node', 'tag': 'v3.16.5', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/calico/cni', 'tag': 'v3.16.5', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/calico/kube-controllers', 'tag': 'v3.16.5', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'calico_typha', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/calico/typha', 'tag': 'v3.16.5', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'weave_kube', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/weaveworks/weave-kube', 'tag': '2.7.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'weave_npc', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/weaveworks/weave-npc', 'tag': '2.7.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'ovn4nfv', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/integratedcloudnative/ovn4nfv-k8s-plugin', 'tag': 'v1.1.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'kube_ovn', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/kubeovn/kube-ovn', 'tag': 'v1.5.2', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'kube_router', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/cloudnativelabs/kube-router', 'tag': 'v1.1.1', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/pause', 'tag': '3.3', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'install_socat', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/xueshanf/install-socat', 'tag': 'latest', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'nginx', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/library/nginx', 'tag': 1.19, 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'haproxy', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/library/haproxy', 'tag': 2.2, 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/coredns', 'tag': '1.7.0', 'sha256': '', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/dns/k8s-dns-node-cache', 'tag': '1.16.0', 'sha256': '', 'groups': ['k8s-cluster']}}) 
skipping: [node1] => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/cpa/cluster-proportional-autoscaler-amd64', 'tag': '1.8.3', 'sha256': '', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'testbox', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/busybox', 'tag': 'latest', 'sha256': ''}}) 
skipping: [node1] => (item={'key': 'helm', 'value': {'enabled': False, 'file': True, 'version': 'v3.3.4', 'dest': '/tmp/releases/helm-v3.3.4/helm-v3.3.4-linux-amd64.tar.gz', 'sha256': 'b664632683c36446deeb85c406871590d879491e3de18978b426769e43a1e82c', 'url': 'https://get.helm.sh/helm-v3.3.4-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'registry', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/library/registry', 'tag': '2.7.1', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'registry_proxy', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/kube-registry-proxy', 'tag': '0.4', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'metrics_server', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/metrics-server/metrics-server', 'tag': 'v0.3.7', 'sha256': '', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'addon_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/addon-resizer', 'tag': '1.8.11', 'sha256': '', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'local_volume_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/external_storage/local-volume-provisioner', 'tag': 'v2.3.4', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'cephfs_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/external_storage/cephfs-provisioner', 'tag': 'v2.1.0-k8s1.11', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'rbd_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/external_storage/rbd-provisioner', 'tag': 'v2.1.1-k8s1.11', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'local_path_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/rancher/local-path-provisioner', 'tag': 'v0.0.17', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'ingress_nginx_controller', 'value': {'enabled': True, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/ingress-nginx/controller', 'tag': 'v0.41.2', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'ingress_ambassador_controller', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/datawire/ambassador-operator', 'tag': 'v1.2.9', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'ingress_alb_controller', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/amazon/aws-alb-ingress-controller', 'tag': 'v1.1.9', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'cert_manager_controller', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/jetstack/cert-manager-controller', 'tag': 'v1.0.4', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'cert_manager_cainjector', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/jetstack/cert-manager-cainjector', 'tag': 'v1.0.4', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'cert_manager_webhook', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/jetstack/cert-manager-webhook', 'tag': 'v1.0.4', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'csi_attacher', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/csi-attacher', 'tag': 'v2.2.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'csi_provisioner', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/csi-provisioner', 'tag': 'v1.6.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'csi_snapshotter', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/csi-snapshotter', 'tag': 'v2.1.1', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'snapshot_controller', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/snapshot-controller', 'tag': 'v2.0.1', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'csi_resizer', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/csi-resizer', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'csi_node_driver_registrar', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scsi/csi-node-driver-registrar', 'tag': 'v1.3.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'cinder_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/k8scloudprovider/cinder-csi-plugin', 'tag': 'v1.18.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'aws_ebs_csi_plugin', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/amazon/aws-ebs-csi-driver', 'tag': 'v0.5.0', 'sha256': '', 'groups': ['kube-node']}}) 
skipping: [node1] => (item={'key': 'dashboard', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/kubernetesui/dashboard-amd64', 'tag': 'v2.1.0', 'sha256': '', 'groups': ['kube-master']}}) 
skipping: [node1] => (item={'key': 'dashboard_metrics_scrapper', 'value': {'enabled': False, 'container': True, 'repo': 'harbor.dev.rdev.tech/kubesprary/kubernetesui/metrics-scraper', 'tag': 'v1.0.6', 'sha256': '', 'groups': ['kube-master']}}) 

TASK [kubespray-defaults : Configure defaults] *********************************
ok: [node1] => {
    "msg": "Check roles/kubespray-defaults/defaults/main.yml"
}

TASK [kubespray-defaults : Set up proxy environment] ***************************
ok: [node1]

TASK [kubespray-defaults : Gather ansible_default_ipv4 from all hosts] *********
skipping: [node1] => (item=node1) 

TASK [kubespray-defaults : create fallback_ips_base] ***************************
ok: [node1 -> localhost]

TASK [kubespray-defaults : set fallback_ips] ***********************************
ok: [node1]

TASK [kubespray-defaults : Set no_proxy to all assigned cluster IPs and hostnames] ***
skipping: [node1]

TASK [kubespray-defaults : Populates no_proxy to all hosts] ********************
skipping: [node1]

TASK [adduser : User | Create User Group] **************************************
ok: [node1]

TASK [adduser : User | Create User] ********************************************
ok: [node1]

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [node1] => (item=swap)
ok: [node1] => (item=none)

TASK [kubernetes/preinstall : check swap] **************************************
ok: [node1]

TASK [kubernetes/preinstall : Disable swap] ************************************
skipping: [node1]

TASK [kubernetes/preinstall : Stop if either kube-master or kube-node group is empty] ***
failed: [node1] (item=kube-master) => {
    "ansible_loop_var": "item",
    "assertion": "groups.get('kube-master')",
    "changed": false,
    "evaluated_to": false,
    "item": "kube-master",
    "msg": "Assertion failed"
}
ok: [node1] => (item=kube-node) => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": "kube-node",
    "msg": "All assertions passed"
}

NO MORE HOSTS LEFT *************************************************************

PLAY RECAP *********************************************************************
localhost                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
node1                      : ok=23   changed=0    unreachable=0    failed=1    skipped=51   rescued=0    ignored=0   

Command execution failed
Error :Command execution failed